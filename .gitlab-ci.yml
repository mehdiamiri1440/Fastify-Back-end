stages:
  - test
  - deploy

variables:
  POSTGRES_PASSWORD: password
  POSTGRES_USER: user
  POSTGRES_DB: inventory
  MINIO_ROOT_USER: minio
  MINIO_ROOT_PASSWORD: minio123

test:
  stage: test
  image: node:18
  services:
    - postgres:15.2
    - name: minio/minio
      alias: minio
      command: ['server', '/data']

  script:
    - npm install
    - npm run format:check
    - npm run lint:quiet
    - npm run check
    - npm run test:coverage
  variables:
    DB_URL: postgres://user:password@postgres:5432/inventory
    DB_DROP_SCHEMA: 'true'
    DB_ENABLE_SYNCHRONIZE: 'true'
    S3_URI: http://minio:minio123@minio:9000/
    JWT_SECRET: secret
    IBAN_VALIDATOR_URL: http://hub2.delinternet.com:5004
    HUB_API_ADDRESS: http://api.hub2.delinternet.com/api/v1
    APP_URL: http://inventory.delinternet.com

  artifacts:
    when: always
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml
      junit:
        - junit.xml

  except:
    - tags

deploy:
  stage: deploy
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: ['']
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --build-arg VERSION=$CI_COMMIT_TAG
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"
      --destination "${CI_REGISTRY_IMAGE}:latest"

  only:
    - tags
